import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.springframework.boot' version '3.2.0' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
}

ext {
    javaProjects = subprojects.findAll { it.childProjects.isEmpty() && !it.name.endsWith("bom") }
}

allprojects {
    group 'tk.mybatis-jakarta'
    version '1.0.0'

    layout.buildDirectory = "$rootDir/build/" + outputDir(project)

    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
            mavenBom 'org.junit:junit-bom:5.10.1'
        }

        dependencies {
            dependencySet(group: 'org.slf4j', version: '2.0.9') {
                entry 'slf4j-api'
                entry 'jcl-over-slf4j'
            }

            dependency 'org.mybatis:mybatis:3.5.14'
            dependency 'org.mybatis:mybatis-spring:3.0.3'

            dependency 'com.mysql:mysql-connector-j:8.2.0'

            dependency 'org.projectlombok:lombok:1.18.30'

            dependency 'jakarta.servlet:jakarta.servlet-api:6.0.0'

            dependency 'jakarta.annotation:jakarta.annotation-api:2.1.1'

            dependency 'jakarta.validation:jakarta.validation-api:3.0.2'

            dependency 'jakarta.persistence:jakarta.persistence-api:3.1.0'

            dependency 'com.github.jsqlparser:jsqlparser:4.7'

            dependency 'org.hsqldb:hsqldb:2.7.2'
            dependency 'com.h2database:h2:2.1.224'
        }
    }

    configurations.configureEach {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            cacheDynamicVersionsFor 0, 'seconds'
        }
    }

    repositories {
        repositories {
            maven {
                url 'https://maven.aliyun.com/repository/public'
            }
            maven {
                url "$maven_registry_release_url"
                credentials {
                    username "$maven_registry_username"
                    password "$maven_registry_password"
                }
            }
            maven {
                url "$maven_registry_snapshot_url"
                credentials {
                    username "$maven_registry_username"
                    password "$maven_registry_password"
                }
            }
        }
        mavenLocal()
        mavenCentral()
    }
}

configure(javaProjects) { project ->
    apply plugin: 'java'

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    ext {
        artifactId = name
    }

    test {
        useJUnitPlatform()
    }

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
}

static def outputDir(Project project) {
    String parentPath = project == project.rootProject || project.parent == project.rootProject ? '' : project.parent.name + '/'
    project.parent == null ? project.name : parentPath + project.name
}